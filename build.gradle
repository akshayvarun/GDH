plugins {
  id "org.sonarqube" version "2.5"
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'pmd'
  pmd {
  		toolVersion='5.5.2'
		ruleSets=["java-basic","java-imports","java-strings","java-clone","java-design"]  		
}
apply plugin: 'findbugs'
  findbugs {
  		sourceSets = [sourceSets.main]
  		toolVersion = "3.0.1"
}

libsDirName = '../'
version = '0.91'
archivesBaseName = 'GDH'

repositories {
    mavenCentral()
	maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

test {
		exclude '**/*Suite.class'
	  	beforeTest { descriptor ->
      	logger.lifecycle("Running test: " + descriptor)
  	}
}

sourceSets.main.resources.srcDirs = [ "src/main/java/resources/" ]

dependencies {
	compile 'io.vertx:vertx-core:3.5.0'
	compile 'io.vertx:vertx-unit:3.5.0'
	compile 'io.vertx:testtools:2.0.3-final'
	compile 'io.reactivex:rxjava:1.3.0'
	compile 'com.google.code.findbugs:annotations:3.0.1'
	compile 'log4j:log4j:1.2.17'
}

clean {
	delete "libs/"
	delete "build/"
	delete "bin/"
	delete "GDH-1.1.jar"
}

jar {
	dependsOn configurations.runtime
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'main.java.gdh.Main'
    }
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

task testSuite(type: Test) {
	include '**VertxTestSuite.class'
}
task copyDeps(type: Copy) {
	into 'libs'
  	from configurations.testRuntime
}
task deleteBuild(type: Delete) {
	delete "build/"
	delete "bin/"
 }
copyDeps.dependsOn(testSuite)
build.dependsOn(deleteBuild)
deleteBuild.dependsOn(copyDeps)
